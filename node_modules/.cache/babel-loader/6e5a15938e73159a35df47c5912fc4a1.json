{"ast":null,"code":"var _jsxFileName = \"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/AddresForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddresForm = ({\n  checkoutToken\n}) => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivions, setshippingSubdivions] = useState([]);\n  const [shippingSubdivion, setshippingSubdivion] = useState('');\n  const [shippingOptions, setshippingOptions] = useState([]);\n  const [shippingOption, setshippingOption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const subdivisions = Object.entries(shippingSubdivion).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    labek: `${sO.description} - (${sO.price.formatted_with_symbol})`\n  }));\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localListSubdivisions(countryCode);\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country,\n      region\n    });\n    setshippingOptions(options);\n    setshippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: methods.handleSubmit(data => test({ ...data,\n          shippingCountry,\n          shippingSubdivision,\n          shippingOption\n        })),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address line 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"Zip / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: Object.entries(shippingCountries).map(([code, name]) => ({\n                id: code,\n                label: name\n              })).map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.label\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Subdivision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubdivision,\n              fullWidth: true,\n              onChange: e => setShippingSubdivision(e.target.value),\n              children: Object.entries(shippingSubdivisions).map(([code, name]) => ({\n                id: code,\n                label: name\n              })).map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.label\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingOption,\n              fullWidth: true,\n              onChange: e => setShippingOption(e.target.value),\n              children: shippingOptions.map(sO => ({\n                id: sO.id,\n                label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n              })).map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.id,\n                children: item.label\n              }, item.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            variant: \"outlined\",\n            to: \"/cart\",\n            children: \"Back to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddresForm, \"BDJ5FH4SUiY+sB7rfUOlaqPoEKw=\", false, function () {\n  return [useForm];\n});\n\n_c = AddresForm;\nexport default AddresForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddresForm\");","map":{"version":3,"sources":["/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/AddresForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","FormInput","commerce","AddresForm","checkoutToken","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivions","setshippingSubdivions","shippingSubdivion","setshippingSubdivion","shippingOptions","setshippingOptions","shippingOption","setshippingOption","methods","countries","Object","entries","map","code","name","id","label","subdivisions","options","sO","labek","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisions","countryCode","localListSubdivisions","setShippingSubdivisions","setShippingSubdivision","fetchShippingOptions","country","region","checkout","getShippingOptions","shippingSubdivision","handleSubmit","data","test","e","target","value","item","shippingSubdivisions","setShippingOption","display","justifyContent","Link"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport FormInput from './CustomTextField';\nimport { commerce } from '../../lib/commerce';\n\nconst AddresForm = ({ checkoutToken }) => {\n    const [shippingCountries, setShippingCountries] = useState([]);\n    const [shippingCountry, setShippingCountry] = useState('');\n    const [shippingSubdivions, setshippingSubdivions] = useState([]);\n    const [shippingSubdivion, setshippingSubdivion] = useState('');\n    const [shippingOptions, setshippingOptions] = useState([]);\n    const [shippingOption, setshippingOption] = useState('');\n    const methods = useForm();\n\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\n    const subdivisions = Object.entries(shippingSubdivion).map(([code, name]) => ({ id: code, label: name }));\n    const options = shippingOptions.map((sO) => ({ id: sO.id, labek: `${sO.description} - (${sO.price.formatted_with_symbol})` }));\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n    }\n\n    const fetchSubdivisions = async (countryCode) => {\n        const { subdivisions } = await commerce.services.localListSubdivisions(countryCode);\n\n        setShippingSubdivisions(subdivisions);\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region });\n        setshippingOptions(options);\n        setshippingOption(options[0].id);\n    }\n\n    useEffect(() => {\n        fetchShippingCountries(checkoutToken.id);\n    }, []);\n\n    useEffect(() => {\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() => {\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n    }, [shippingSubdivision]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name=\"firstName\" label=\"First name\" />\n                        <FormInput required name=\"lastName\" label=\"Last name\" />\n                        <FormInput required name=\"address1\" label=\"Address line 1\" />\n                        <FormInput required name=\"email\" label=\"Email\" />\n                        <FormInput required name=\"city\" label=\"City\" />\n                        <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                                    <MenuItem key={item.id} value={item.id}>\n                                        {item.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                        <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n                </form>\n            </FormProvider>\n        </>\n    );\n};\n\nexport default AddresForm;"]},"metadata":{},"sourceType":"module"}