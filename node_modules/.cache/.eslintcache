[{"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/index.js":"1","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/App.js":"2","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Products.jsx":"3","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Product/Product.jsx":"4","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Product/styles.js":"5","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Navbar/Navbar.jsx":"6","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/index.js":"7","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Navbar/styles.js":"8","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/styles.js":"9","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/lib/commerce.js":"10","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/Cart.jsx":"11","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/styles.js":"12","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/CartItem/styles.js":"14","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Checkout/styles.js":"16","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/PaymentForm.jsx":"17","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/CustomTextField.jsx":"18","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Review.jsx":"19","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/AddressForm.jsx":"20","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Content/Content.jsx":"21","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Content/styles.js":"22"},{"size":147,"mtime":1606580861000,"results":"23","hashOfConfig":"24"},{"size":2721,"mtime":1614157565979,"results":"25","hashOfConfig":"24"},{"size":755,"mtime":1614172235494,"results":"26","hashOfConfig":"24"},{"size":1254,"mtime":1614175938433,"results":"27","hashOfConfig":"24"},{"size":347,"mtime":1614176373303,"results":"28","hashOfConfig":"24"},{"size":2898,"mtime":1614159517070,"results":"29","hashOfConfig":"24"},{"size":288,"mtime":1614115415345,"results":"30","hashOfConfig":"24"},{"size":1565,"mtime":1606580861000,"results":"31","hashOfConfig":"24"},{"size":287,"mtime":1606580861000,"results":"32","hashOfConfig":"24"},{"size":126,"mtime":1606580861000,"results":"33","hashOfConfig":"24"},{"size":2289,"mtime":1614177752029,"results":"34","hashOfConfig":"24"},{"size":594,"mtime":1614118081418,"results":"35","hashOfConfig":"24"},{"size":1480,"mtime":1614165968302,"results":"36","hashOfConfig":"24"},{"size":333,"mtime":1606580861000,"results":"37","hashOfConfig":"24"},{"size":3598,"mtime":1614110952206,"results":"38","hashOfConfig":"24"},{"size":1158,"mtime":1606580861000,"results":"39","hashOfConfig":"24"},{"size":2427,"mtime":1614433050198,"results":"40","hashOfConfig":"24"},{"size":533,"mtime":1606580861000,"results":"41","hashOfConfig":"24"},{"size":892,"mtime":1606580861000,"results":"42","hashOfConfig":"24"},{"size":4591,"mtime":1614177895129,"results":"43","hashOfConfig":"24"},{"size":112,"mtime":1614115986744,"results":"44","hashOfConfig":"24"},{"size":468,"mtime":1614115674428,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ljdha3",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/index.js",[],["95","96"],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/App.js",["97"],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { Navbar, Products, Cart, Checkout, Content } from './components';\nimport { commerce } from './lib/commerce';\n\nconst App = () => {\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n  const [order, setOrder] = useState({});\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const fetchProducts = async () => {\n    const { data } = await commerce.products.list();\n\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n  };\n\n  const handleAddToCart = async (productId, quantity) => {\n    const item = await commerce.cart.add(productId, quantity);\n\n    setCart(item.cart);\n  };\n\n  const handleUpdateCartQty = async (lineItemId, quantity) => {\n    const response = await commerce.cart.update(lineItemId, { quantity });\n\n    setCart(response.cart);\n  };\n\n  const handleRemoveFromCart = async (lineItemId) => {\n    const response = await commerce.cart.remove(lineItemId);\n\n    setCart(response.cart);\n  };\n\n  const handleEmptyCart = async () => {\n    const response = await commerce.cart.empty();\n\n    setCart(response.cart);\n  };\n\n  const refreshCart = async () => {\n    const newCart = await commerce.cart.refresh();\n\n    setCart(newCart);\n  };\n\n  const handleCaptureCheckout = async (checkoutTokenId, newOrder) => {\n    try {\n      const incomingOrder = await commerce.checkout.capture(checkoutTokenId, newOrder);\n\n      setOrder(incomingOrder);\n\n      refreshCart();\n    } catch (error) {\n      setErrorMessage(error.data.error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n\n  const handleDrawerToggle = () => setMobileOpen(!mobileOpen);\n\n  return (\n    <Router>\n      <div style={{ display: 'flex' }}>\n        <CssBaseline />\n        <Navbar totalItems={cart.total_items} handleDrawerToggle={handleDrawerToggle} />\n        <Switch>\n          <Route exact path=\"/products\">\n            <Products products={products} onAddToCart={handleAddToCart} handleUpdateCartQty />\n          </Route>\n          <Route exact path=\"/cart\">\n            <Cart cart={cart} onUpdateCartQty={handleUpdateCartQty} onRemoveFromCart={handleRemoveFromCart} onEmptyCart={handleEmptyCart} />\n          </Route>\n          <Route path=\"/checkout\" exact>\n            <Checkout cart={cart} order={order} onCaptureCheckout={handleCaptureCheckout} error={errorMessage} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Products.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Product/Product.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/Product/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Navbar/Navbar.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/index.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Navbar/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Products/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/lib/commerce.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/Cart.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Cart/CartItem/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Checkout/Checkout.jsx",["98"],"import React, { useState, useEffect } from 'react';\nimport { CssBaseline, Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button } from '@material-ui/core';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { commerce } from '../../../lib/commerce';\nimport AddressForm from '../AddressForm';\nimport PaymentForm from '../PaymentForm';\nimport useStyles from './styles';\n\nconst steps = ['Shipping address', 'Payment details'];\n\nconst Checkout = ({ cart, onCaptureCheckout, order, error }) => {\n  const [checkoutToken, setCheckoutToken] = useState(null);\n  const [activeStep, setActiveStep] = useState(0);\n  const [shippingData, setShippingData] = useState({});\n  const [isFinished, setIsfinished] = useState(false);\n  const classes = useStyles();\n  const history = useHistory();\n\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\n\n  useEffect(() => {\n    if (cart.id) {\n      const generateToken = async () => {\n        try {\n          const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });\n\n          setCheckoutToken(token);\n        } catch {\n          if (activeStep !== steps.length) history.push('/');\n        }\n      };\n\n      generateToken();\n    }\n  }, [cart]);\n\n  const test = (data) => {\n    setShippingData(data);\n\n    nextStep();\n  };\n\n  const timeout = () => {\n    setTimeout(() => {\n      setIsfinished(true);\n    }, 3000);\n  }\n\n  let Confirmation = () => (order.customer ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}!</Typography>\n        <Divider className={classes.divider} />\n        <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : isFinished ? (\n    <>\n      <div>\n        <Typography variant=\"h5\">Thank you for your purchase,</Typography>\n        <Divider className={classes.divider} />\n      </div>\n      <br />\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n    </>\n  ) : (\n        <div className={classes.spinner}>\n          <CircularProgress />\n        </div>\n      ));\n\n  if (error) {\n    Confirmation = () => (\n      <>\n        <Typography variant=\"h5\">something went wrong!</Typography>\n        <br />\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">Back to home</Button>\n      </>\n    );\n  }\n\n  const Form = () => (activeStep === 0\n    ? <AddressForm checkoutToken={checkoutToken} nextStep={nextStep} setShippingData={setShippingData} test={test} />\n    : <PaymentForm checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} shippingData={shippingData} onCaptureCheckout={onCaptureCheckout} timeout={timeout} />);\n\n  return (\n    <>\n      <CssBaseline />\n      <div className={classes.toolbar} />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\n        </Paper>\n      </main>\n    </>\n  );\n};\n\nexport default Checkout;\n","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/PaymentForm.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/Review.jsx",[],"/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/CheckoutForm/AddressForm.jsx",["99","100"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Content/Content.jsx",["101","102"],"import React from 'react';\nimport useStyles from './styles';\n\nconst Content = () => {\n}\nexport default Content;\n","/Users/pontus/Coding/projects/kaffesnurr_ehandel/src/components/Content/styles.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":5,"column":44,"nodeType":"109","messageId":"110","endLine":5,"endColumn":51},{"ruleId":"111","severity":1,"message":"112","line":37,"column":6,"nodeType":"113","endLine":37,"endColumn":12,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":40,"column":6,"nodeType":"113","endLine":40,"endColumn":8,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":48,"column":6,"nodeType":"113","endLine":48,"endColumn":27,"suggestions":"118"},{"ruleId":"107","severity":1,"message":"119","line":1,"column":8,"nodeType":"109","messageId":"110","endLine":1,"endColumn":13},{"ruleId":"107","severity":1,"message":"120","line":2,"column":8,"nodeType":"109","messageId":"110","endLine":2,"endColumn":17},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeStep' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["125"],"'React' is defined but never used.","'useStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [activeStep, cart, history]",{"range":"132","text":"133"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"134","text":"135"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"136","text":"137"},[1328,1334],"[activeStep, cart, history]",[1667,1669],"[checkoutToken.id]",[1912,1933],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]